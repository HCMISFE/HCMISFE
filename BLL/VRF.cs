
// Generated by MyGeneration Version # (1.3.0.9)

using System;
using System.Data;
using DAL;
using EthiopianDate;

namespace BLL
{
    public class VRF : _VRF
    {
        public VRF()
        {

        }

        public int AddNewVRF(int VRFType, int fromYear, int fromMonth, int toYear, int toMonth, bool overWriteOn)
        {
            if (VRFExists(VRFType, fromYear, fromMonth, toYear, toMonth))
            {
                if (!overWriteOn)
                    return -1;
            }
            else
            {
                this.AddNew();
            }

            //this.StoreID = storeID;
            this.VRFType = VRFType;
            this.FromYear = fromYear;
            this.FromMonth = fromMonth;
            this.ToMonth = toMonth;
            this.ToYear = toYear;
            this.DateOfSubmission = DateTime.Now;
            this.Save();
            return this.ID;
        }

        public bool VRFExists(int VRFType, int fromYear, int fromMonth, int toYear, int toMonth)
        {
            this.FlushData();
            //this.Where.StoreID.Value = storeID;
            this.Where.FromYear.Value = fromYear;
            this.Where.FromMonth.Value = fromMonth;
            this.Where.ToYear.Value = toYear;
            this.Where.ToMonth.Value = toMonth;
            this.Where.VRFType.Value = VRFType;
            this.Query.Load();
            return this.RowCount > 0;
        }

        public DataTable GetSavedVRFList()
        {
            this.FlushData();
            this.LoadAll();
            return this.DataTable;
        }

        public DataTable GetSavedVRFForDisplay()
        {
            this.FlushData();
            string query = "select ID,DateOfSubmission, LastVRFStatus, VRFType, cast(FromMonth as varchar) + ',' + cast(FromYear as varchar) + ' - ' + cast(ToMonth as varchar) + ',' + cast(ToYear as varchar) Period from VRF";
            this.LoadFromRawSql(query);
            this.AddColumn("DateOfSubmissionEth", typeof(string));
            this.AddColumn("VRFTypeText", typeof(string));
            this.AddColumn("VRFStatus", typeof(string));
            while (!this.EOF)
            {
                string ethDate = this.IsColumnNull("DateOfSubmission") ? "" : EthiopianDate.EthiopianDate.GregorianToEthiopian(this.DateOfSubmission);
                this.SetColumn("DateOfSubmissionEth", ethDate);
                var str = new Stores();
                str.LoadByStoreID(this.VRFType);
                this.SetColumn("VRFTypeText", str.RowCount > 0 ? str.StoreName : "Unknown Store");
                this.SetColumn("VRFStatus", "Printed");
                this.MoveNext();
            }
            return this.DataTable;
        }
    }
}
